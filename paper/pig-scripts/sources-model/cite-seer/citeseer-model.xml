<?xml version="1.0" encoding="UTF-8"?><xml><records><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Abramowicz, Witold</author><author>Hofman, R</author></authors></contributors><titles><title>SQuaRE based web services quality model</title><secondary-title>Proceedings of The …</secondary-title></titles><periodical><full-title>Proceedings of The …</full-title></periodical><pages>19-21</pages><volume>I</volume><keywords/><dates><year>2008</year></dates><isbn>9789889867188</isbn><urls><web-urls><url>http://www.researchgate.net/publication/44261676_SQuaRE_based_Web_Services_Quality_Model/file/9fcfd508ea67fd2f05.pdf</url></web-urls></urls><abstract>Growing Web Service usage, design and composition methods require precise and reliable informa- tion about Web Services quality. Such quality description has to be compatible with universal software quality models, so designers will be able to gather and decompose quality requirements addressing them to different IT solution com- ponents, including used Web Services. This article proposes Web Services Quality Model based on ISO/IEC Software product Quality Requirements and Evaluation (SQuaRE) model. Model consists of three perspectives Internal Web Service Quality, External Web Service Quality and Web Service Quality in Use. Prior to model definitions the au- thors present extended search on quality related issues in literature regarding Web Services and software in general. Authors refer to general need for measuring and publication of Web Service Quality measures considering limited trust and temporal character of measures. This article does not include technical solutions, but focuses on quality model showing its relevance to business needs.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Benharref, Abdelghani</author><author>Serhani, M. Adel</author><author>Bouktif, Salah</author><author>Bentahar, Jamal</author></authors></contributors><titles><title>A New Approach for Quality Enforcement in Communities of Web Services</title><secondary-title>2011 IEEE International Conference on Services Computing</secondary-title></titles><periodical><full-title>2011 IEEE International Conference on Services Computing</full-title></periodical><pages>472-479</pages><keywords><keyword>-component</keyword></keywords><dates><year>2011</year></dates><publisher>Ieee</publisher><isbn>978-1-4577-0863-3</isbn><electronic-resource-num>10.1109/SCC.2011.44</electronic-resource-num><urls><web-urls><url>http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=6009296</url></web-urls></urls><abstract>Nowadays, Web Services are considered as de facto and attracting distributed approach of application/services integration over the Internet. Web Services can also operate within communities to improve their visibility and market share. In a community, Web Services usually offer competing and/or complementing services. In this paper, we augment the community approach by defining a specific-purpose community to monitor Web Services operating in any Web Services community. This monitoring community consists of a set of Web Services capable of observing other Web Services. Clients, providers, as well as managers of communities can make use of the monitoring community to check if a Web Service is operating as expected. This paper defines the overall architecture of the monitoring community, the business model behind, different rules and terms to be respected by its members, services it offers to its various classes of customers. The paper also presents promising experimental results using the monitoring community.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Conference Proceedings">3</ref-type><contributors><authors><author>Canfora, Gerardo</author><author>Di Penta, Massimiliano</author><author>Esposito, Raffaele</author><author>Villani, Maria Luisa</author></authors></contributors><titles><title>An approach for QoS-aware service composition based on genetic algorithms</title><secondary-title>Proceedings of the 2005 conference on Genetic and evolutionary computation - GECCO '05</secondary-title></titles><periodical><full-title>Proceedings of the 2005 conference on Genetic and evolutionary computation - GECCO '05</full-title></periodical><pages>1069</pages><keywords><keyword>aware composi-</keyword><keyword>oriented software engineering</keyword><keyword>qos</keyword><keyword>service</keyword></keywords><dates><year>2005</year></dates><pub-location>New York, New York, USA</pub-location><publisher>ACM Press</publisher><isbn>1595930108</isbn><electronic-resource-num>10.1145/1068009.1068189</electronic-resource-num><urls><web-urls><url>http://portal.acm.org/citation.cfm?doid=1068009.1068189</url></web-urls></urls><abstract>Web services are rapidly changing the landscape of software engineering. One of the most interesting challenges introduced by web services is represented by Quality Of Service (QoS)--aware composition and late--binding. This allows to bind, at run--time, a service--oriented system with a set of services that, among those providing the required features, meet some non--functional constraints, and optimize criteria such as the overall cost or response time. In other words, QoS--aware composition can be modeled as an optimization problem.We propose to adopt Genetic Algorithms to this aim. Genetic Algorithms, while being slower than integer programming, represent a more scalable choice, and are more suitable to handle generic QoS attributes. The paper describes our approach and its applicability, advantages and weaknesses, discussing results of some numerical simulations.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Canfora, Gerardo</author><author>Penta, Massimiliano Di</author></authors></contributors><titles><title>A lightweight approach for QoS-aware service composition</title><secondary-title>… conference on service …</secondary-title></titles><periodical><full-title>… conference on service …</full-title></periodical><keywords/><dates><year>2004</year></dates><urls><web-urls><url>http://www.rcost.unisannio.it/mdipenta/papers/tr-qos.pdf</url></web-urls></urls><abstract>One of the most challenging issues of service–centric software engineering is the QoS–aware composition of services. The aim is to search for the optimal set of services that, composed to create a new service, result in the best QoS, under the user or service designer constraints. During service execution, re-planning such a composition may be needed whenever deviations from the QoS estimates occur. Both QoS–aware composition and re-planning may need to be performed in a short time, especially for interactive or real–time systems. This paper proposes a lightweight approach for QoS–aware service composition that uses genetic algorithms for the optimal QoS estimation. Also, the paper presents an algorithm for early triggering service re-planning. If required re-planning is triggered as soon as possible during service execution. The performances of our approach are evaluated by means of numerical simulation. 1.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Casado, Ruben</author><author>Tuya, Javier</author><author>Younas, Muhammad</author></authors></contributors><titles><title>Testing Long-Lived Web Services Transactions Using a Risk-Based Approach</title><secondary-title>2010 10th International Conference on Quality Software</secondary-title></titles><periodical><full-title>2010 10th International Conference on Quality Software</full-title></periodical><pages>337-340</pages><issue>Qsic</issue><keywords><keyword>Long-lived transactions</keyword><keyword>risk-based testing</keyword><keyword>web service testing</keyword></keywords><dates><year>2010</year></dates><publisher>Ieee</publisher><isbn>978-1-4244-8078-4</isbn><electronic-resource-num>10.1109/QSIC.2010.46</electronic-resource-num><urls><web-urls><url>http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5562980</url></web-urls></urls><abstract>Transactions are crucial to ensuring the quality (such as recovery and reliability) of web services applications by constraining them to a mutually agreed outcome. This paper addresses the issue of testing the long-lived web services transactions which has been given little attention by the current research. It proposes a risk-based approach and also defines a set of properties for web services transactions. The proposed approach identifies for each property a set of potential situations that must be tested. We present an analysis for the Recovery property using a Fault Tree diagram where the leaf nodes represent potentially dangerous scenarios that must be checked. Finally we show with a case study how this Fault Tree can be used to derive test cases for web services transactions.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Group, Distributed Systems</author></authors></contributors><titles><title>Master's Thesis Quality Attributes for Web Services : An Evaluation of Application Servers</title></titles><periodical/><pages>1-123</pages><issue>9625878</issue><keywords/><dates><year>2002</year></dates><urls/><abstract>This thesis is concerned with quality attributes for Web Services and evaluates application servers based on quality attributes. In reality they aren’t revolutionary, but there are many reasons why they are in great demand. Web Services follow a Service Oriented Architecture. The current standards for Web Services are XML, SOAP, UDDI and WSDL. A Web Service can be nearly any type of application that has the ability to define to other applications what it does and can perform that action for authorized applications. They can be described, published and located over the World Wide Web. Web Services provide an abstract model that describes a mechanism for a producer of a service to advertise something a consumer can find. Faster time-to-market, reduced costs for investment or reuse are reasons why Application Server vendors try to offer customers best support for Web Services. They open new perspectives for Enterprise Application Integration and for integration of business processes from different companies. This thesis tries to find quality attributes that can be used to compare the support for Web Services of different Application Server vendors such as Hewlett- Packard, IBM or BEA Systems. Those quality attributes are for example architecture, development process, development tools or security. This thesis assists Web Service Developers to find out what the important qualities they have to consider in the evaluation process of an Application Server are.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Héam, PC</author></authors></contributors><titles><title>How to Handle QoS Aspects in Web Services Substitutivity Verification ∗</title><secondary-title>… , 2007. WETICE 2007. …</secondary-title></titles><periodical><full-title>… , 2007. WETICE 2007. …</full-title></periodical><keywords/><dates><year>2007</year></dates><urls><web-urls><url>http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=4407183</url></web-urls></urls><abstract>Web services (WSs) are used more and more as components of distributed applications with a goal to resolve complex tasks that simple services cannot. This use of WSs is connected to the emergence of languages like WS-BPEL which allows describing the external behaviour of WSs on top of the service interfaces. The use of WSs as components of distributed applications implies the possibility to change a failing service for another which can do at least the same thinks as the replaced service. Different solutions have been proposed during the last years to check such properties, but, to our knowledge, none of them take QoS aspects into account. This paper introduces a set of tools and techniques for verifying WSs substitutivity while taking into account service costs such as the execution time of the different operations provided by WSs.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Hung, Patrick C K</author><author>Li, Haifei</author></authors></contributors><titles><title>Web Services Discovery Based on the Trade-off between Quality and Cost of Service : A Token- based Approach</title></titles><periodical/><keywords/><dates><year>2001</year></dates><urls/><abstract>A Web service is an autonomous unit of application logic that provides either some business functionality or information to other applications through an Internet connection. Web services discovery is the process of finding most appropriate Web services providers needed by a Web services requestor. One of the important issues in the discovery process is for Web services providers and Web services requestors to negotiate and find an integrative solution that is optimal to both sides. Web services providers use resources to provide services to requestors in return for benefits. On the other hand, Web services requestors pay for services from providers in return for benefits as well. In this scenario, both parties should have their own cost-benefit models for making such a business decision. In convention, fixed pricing strategies are used for Internet-related business models such as online bookstores. However, these may not be suitable in some business models. For example, data mining services are always one-of-a-kind services, expensive and non-repetitive that usually require a more sophisticated business model. Therefore, sophisticated Web services providers should provide a list of trade-off alternatives between the Quality of Service (QoS) they offer and the Cost of Service (CoS) they use to requestors. In this model, the QoS relates to performance-oriented capabilities and the CoS relates to services' resource requirements. To achieve an integrative solution, both parties have to evaluate the list of QoS and CoS alternatives for obtaining an appropriate combination. One of the negotiation strategies for achieving integrative solutions is called logrolling. Traditionally logrolling in two-issue (i.e., the QoS and CoS) and two-party (i.e., the Web services provider and requestor) negotiation is defined as the exchange of loss in one issue for gain in other issues that result in an increase of the overall values for both parties. It means that each party can increase the overall value by trading the less preferred issue for the more preferred, provided that a trade-off ratio is satisfactory. This paper presents a token-based approach to quantify the QoS and CoS for achieving integrative solutions.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Ludwig, Heiko</author></authors></contributors><titles><title>Web Services QoS : External SLAs and Internal Policies Or : How do we deliver what we promise ?</title></titles><periodical/><keywords/><urls/><abstract>With Web services starting to be deployed within organizations and being offered as paid services across organizational boundaries, quality of service (QoS) has become one of the key issues to be addressed by providers and clients. While methods to describe and advertise QoS properties have been developed, the main outstanding issue remains how to implement a service that lives up to promised QoS properties. This keynote speech revisits the current state of the art of QoS management applied today to Web services and raises a set of research issues that originate in the visualization aspect of services and are specific to QoS management in a services environment - beyond what is addressed so far by work in the areas of distributed systems and performance management.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Lung, Silviu</author></authors></contributors><titles><title>Mapping a Fuzzy Logic Approach for QoS-aware Service Selection on Current Web Service Standards</title></titles><periodical/><keywords/><urls><pdf-urls><url>internal-pdf://</url></pdf-urls></urls><abstract>We propose FQ (Fuzzy-QoS), a complete architecture for including user preferences and quality of service characteristics in the selection process of web services. Besides the flexibility of the selection and ranking algorithm, we consider of equal importance the properties of the implementation: compliance with standards, backwards compatibility and compatibility with non-FQ users, and performance of the selection mechanisms implementation. We present our approach that relies on a combination of two standards from the domain of web service and semantic web technologies: UDDI, for storing and retrieving syntactic and semantic information about web services and SAWSDL, for creating semantically annotated web service descriptions.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Marco, Antinisca Di</author><author>Pompilio, Claudio</author><author>Bertolino, Antonia</author><author>Calabrò, Antonello</author><author>Lonetti, Francesca</author><author>Faedo, Informazione A</author><author>Antipolis, Sophia</author></authors></contributors><titles><title>Yet Another Meta-Model to specify Non-Functional Properties Categories and Subject Descriptors</title></titles><periodical/><issue>Qasba</issue><keywords><keyword>meta-model</keyword><keyword>non-functional properties</keyword><keyword>service quality model</keyword></keywords><dates><year>2011</year></dates><isbn>9781450308267</isbn><urls/><abstract>In service-oriented systems non-functional properties become very important to support run-time service discovery and composition. Software engineers should take care of them for guaranteeing the service quality in all the software life-cycle phases, from requirements specification to design, to sys- tem deployment and execution monitoring. This wide scope and the criticality of non-functional properties demand that they are expressed in a language which is intuitive and easy to use for the service quality specification, and at the same time is machine-processable to be automatically handled at run-time. In this paper we present a Property Meta-Model that aims to reach these two main objectives and show as a proof of concept its use for the modeling of two different properties.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Nurhayati, Wan</author><author>Ab, W A N</author><author>Meziane, Farid</author></authors></contributors><titles><title>Challenges to Describe QoS Requirements for Web Services Quality Prediction to Support Web Services Interoperability in Electronic Commerce</title></titles><periodical/><pages>50-58</pages><volume>4</volume><keywords><keyword>e-commerce</keyword><keyword>qos metamodel</keyword><keyword>qos model</keyword><keyword>requirement</keyword><keyword>web service</keyword></keywords><dates><year>2008</year></dates><urls/><abstract>Quality of service (QoS) is significant and necessary for web service applications quality assurance. Furthermore, web services quality has contributed to the successful implementation of Electronic Commerce (EC) applications. However, QoS is still the big issue for web services research and remains one of the main research questions that need to be explored. We believe that QoS should not only be measured but should also be predicted during the development and implementation stages. However, there are challenges and constraints to determine and choose QoS requirements for high quality web services. Therefore, this paper highlights the challenges for the QoS requirements prediction as they are not easy to identify. Moreover, there are many different perspectives and purposes of web services, and various prediction techniques to describe QoS requirements. Additionally, the paper introduces a metamodel as a concept of what makes a good web service.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Of, Ournal</author></authors></contributors><titles><title>Performance Prediction Based EX-QoS Driven Approach for Adaptive Service Composition *</title></titles><periodical/><pages>345-362</pages><volume>362</volume><issue>60773218</issue><keywords><keyword>adap-</keyword><keyword>decentralized service composition</keyword><keyword>failure prediction</keyword><keyword>qos</keyword><keyword>re-selection</keyword></keywords><dates><year>2009</year></dates><urls/><abstract>Web services run in a highly dynamic environment, as a result of which the QoS will change relatively frequently. In order to make the composite service adapt to such dynamic property of web services, we propose an adaptive approach for web service composition. This approach uses an EX-QoS model which makes the approach applica- ble in the decentralized service composition to achieve global optimization. Besides this, in order to make the composite service adjust itself quickly when execution problems occur, this paper uses replacement composite services backed up before the execution. Then, when a service fails, the composite service can easily switch to the replacement without affecting the runtime performance. In order to preserve the availability of the re- placement, a re-selection for updating the replacement is used which is on the basis of a performance prediction to make the re-selection complete as early before the invocation of the failed service as possible. Experiments show that the proposed solutions have bet- ter performance in supporting the adaptive decentralized service composition.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Panagis, Yannis</author></authors></contributors><titles><title>Web service workflow selection using system and network QoS constraints Evangelos Sakkopoulos * and Athanasios Tsakalidis</title></titles><periodical/><pages>114-134</pages><volume>4</volume><issue>1</issue><keywords><keyword>quality of web</keyword><keyword>web service selection</keyword><keyword>web service workflows</keyword></keywords><dates><year>2008</year></dates><urls/><abstract>Abstract: Web services serve as a leading technology platform for web-based data-centric environments providing flexibility of loose coupling, message-based communication. Interest in more efficient web services selection strategies is rather requisite especially from the business process workflow perspective. We present several strategies to efficiently select a set of web services performing a workflow, fulfilling quality specifications at all workflow steps. The focus is on finding the best performing web service given a history of the execution times and current measured variation in operating system and network resource consumption. To assess their efficiency, we experimentally evaluate them and present comparative results, which strongly indicate that they can effectively reduce the overall workflow execution time in a web service-based workflow with QoS constraints. Approaches are presented for a number of workflows depending on their particular characteristics.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Pathak, Jyotishman</author><author>Basu, Samik</author><author>Honavar, Vasant</author></authors></contributors><titles><title>Modeling Web Services by Iterative Reformulation of Functional and Non-functional Requirements</title></titles><periodical/><pages>314-326</pages><keywords/><dates><year>2006</year></dates><urls/><abstract>We propose an approach for incremental modeling of composite Web services. The technique takes into consideration both the functional and non-functional requirements of the composition. While the functional requirements are described using symbolic transition systems—transition systems augmented with state variables, function invocations, and guards; non-functional requirements are quantified using thresholds. The approach allows users to specify an abstract and possibly incomplete specification of the desired service (goal) that can be realized by selecting and composing a set of pre-existing services. In the event that such a composition is unrealizable, i.e. the composition is not functionally equivalent to the goal or the non-functional requirements are violated, our system provides the user with the causes for the failure, that can be used to appropriately reformulate the functional and/or non-functional requirements of the goal specification.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Petrova-Antonova, Dessislava</author><author>Ilieva, Sylvia</author></authors></contributors><titles><title>Towards a Unifying View of QoS-Enhanced Web Service Description and Discovery Approaches</title><secondary-title>Electronic Proceedings in Theoretical Computer Science</secondary-title></titles><periodical><full-title>Electronic Proceedings in Theoretical Computer Science</full-title></periodical><pages>99-113</pages><volume>2</volume><keywords/><dates><year>2009</year></dates><electronic-resource-num>10.4204/EPTCS.2.8</electronic-resource-num><urls><web-urls><url>http://arxiv.org/abs/0906.3930v1</url></web-urls></urls><abstract>The number of web services increased vastly in the last years. Various providers offer web services with the same functionality, so for web service consumers it is getting more complicated to select the web service, which best fits their requirements. That is why a lot of the research efforts point to discover semantic means for describing web services taking into account not only functional characteristics of services, but also the quality of service (QoS) properties such as availability, reliability, response time, trust, etc. This motivated us to research current approaches presenting complete solutions for QoS enabled web service description, publication and discovery. In this paper we present comparative analysis of these approaches according to their common principals. Based on such analysis we extract the essential aspects from them and propose a pattern for the development of QoS-aware service-oriented architectures.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Rosario, Sidney</author><author>Benveniste, Albert</author><author>Haar, Stefan</author><author>Jard, Claude</author></authors></contributors><titles><title>Probabilistic QoS and Soft Contracts for Transaction-Based Web Services Orchestrations</title></titles><periodical/><pages>1-14</pages><volume>1</volume><issue>4</issue><keywords/><dates><year>2008</year></dates><urls/><abstract>Service level agreements (SLAs), or contracts, have an important role in Web services. They define the obligations and rights between the provider of a Web service and its client, about the function and the quality of the service (QoS). For composite services like orchestrations, contracts are deduced by a process called QoS contract composition, based on contracts established between the orchestration and the called Web services. Contracts are typically stated as hard guarantees (e.g., response time always less than 5 msec). Using hard bounds is not realistic, however, and more statistical approaches are needed. In this paper we propose using soft probabilistic contracts instead, which consist of a probability distribution for the considered QoS parameter-in this paper, we focus on timing. We show how to compose such contracts, to yield a global probabilistic contract for the orchestration. Our approach is implemented by the TOrQuE tool. Experiments on TOrQuE show that overly pessimistic contracts can be avoided and significant room for safe overbooking exists. An essential component of SLA management is then the continuous monitoring of the performance of called Web services, to check for violations of the SLA. We propose a statistical technique for run-time monitoring of soft contracts.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Rosenberg, Florian</author><author>Celikovic, Predrag</author><author>Michlmayr, Anton</author><author>Leitner, Philipp</author><author>Dustdar, Schahram</author></authors></contributors><titles><title>An End-to-End Approach for QoS-Aware Service Composition</title></titles><periodical/><keywords/><urls><pdf-urls><url>internal-pdf://</url></pdf-urls></urls><abstract>A simple and effective composition of software services into higher-level composite services is still a very challenging task. Especially in enterprise environments, quality of service (QoS) concerns play a major role when building software systems following the service-oriented architecture (SOA) paradigm. Inthis paper we present a composition approach based on a domain-specific language(DSL) for specifying functional requirements of services and the expected QoS inform of constraint hierarchies by leveraging hard and soft constraints. Acomposition runtime will resolve the user's constraints to find an optimize dcomposition semi-automatically. To this end we leverage data flow analysis to generate a structured composition model and use two different techniques for the optimization, a constraint programming and an integer programming approach.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Samuel, S Justin</author><author>Road, Rajiv Gandhi</author><author>Nadu, Tamil</author></authors></contributors><titles><title>AN APPROACH FOR GRAPH BASED PLANNING AND QUALITY DRIVEN COMPOSITION OF WEB SERVICES</title></titles><periodical/><pages>672-679</pages><volume>2</volume><issue>5</issue><keywords><keyword>composition planning</keyword><keyword>composition schema</keyword><keyword>web service composition</keyword></keywords><dates><year>2011</year></dates><urls/><abstract>Service Oriented Architectures enable a multitude of Web services to provide loosely coupled and interoperable services at different Quality of Service level in the recent few years. Dynamic Web services composition offers the opportunity for creating new web services at runtime from those already published in UDDI registry. However, this composition requires necessarily quantifying criteria for Web service selection to build a more appropriate one. As the result, the problem of synthesizing web services of high quality is a prominent issue. To resolve the problem of finding the best composition, quality based graph planning method is used. First we construct the composition planning graph and secondly by applying non-functional quality parameters the best composition schema is found by using iterative method. It provides a unique search space and also it guarantees to find a best solution to a solvable problem.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Santhanam, GR</author></authors></contributors><titles><title>Web service substitution based on preferences over non-functional attributes</title><secondary-title>Services Computing, 2009. …</secondary-title></titles><periodical><full-title>Services Computing, 2009. …</full-title></periodical><keywords/><dates><year>2009</year></dates><urls><pdf-urls><url>internal-pdf://</url></pdf-urls><web-urls><url>http://ieeexplore.ieee.org/xpls/abs_all.jsp?arnumber=5283949</url></web-urls></urls><abstract>In many applications involving composite Web services, one or more component services may become unavailable. This presents us with the problem of identifying other components that can take their place, while maintaining the overall functionality of the composite service. Given a choice of candidate substitutions that offer the desired functionality, it is often necessary to select the most preferred substitution based on non-functional attributes of the service, e.g., security, reliability, etc. We propose an approach to this problem using preference networks for representing and reasoning about preferences over non-functional properties. We present algorithms for solving several variants of this problem: a) when the choice of the preferred substitution is independent of the other constituents of the composite service; b) when the choice of the preferred substitution depends on the other constituents of the composite service; and c) when multiple constituents of a composite service need to be replaced simultaneously. The proposed solutions to the service substitution problem based on preferences over non-functional properties are independent of the specific formalism used to represent functional requirements of a composite service as well as the specific algorithm used to assemble the composite service.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Sha, M Mohemmed</author><author>Rajalakshmi, C</author><author>Pavithra, S</author><author>Priya, M Yasotha</author></authors></contributors><titles><title>WSLA Schema for Functionality Based Weight fixing of Non-Functional Parameters of Web Services</title></titles><periodical/><pages>247-251</pages><volume>5</volume><issue>04</issue><keywords><keyword>-qos</keyword><keyword>QoS</keyword><keyword>WSLA</keyword><keyword>wsla</keyword></keywords><dates><year>2013</year></dates><urls/><abstract>Recently web services have evolved as a cost-effective solution for exchanging information between distributed applications over different operating system, platform, and software environment. The success of such a system is mainly depends on the quality offered by the service and the extent to which the web service meets the customer requirements. So while selection of a service the top priority is given to the functionality related aspects. From the list of service with same functionality the selection of a service is made by evaluating the QoS by considering the domain specific and domain independent attribute that leads to the achievement of maximum functionality.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Solutions, Network</author><author>Susila, A</author></authors></contributors><titles><title>A Novel Approach to Web Service Selection Based on QoS Through Service Oriented Architecture .</title></titles><periodical/><pages>16-25</pages><volume>2</volume><keywords><keyword>bpel</keyword><keyword>soap request</keyword><keyword>soap response</keyword><keyword>web service composition</keyword><keyword>weka</keyword></keywords><dates><year>2014</year></dates><urls/><abstract>To provide complex functionality in service oriented architecture, we need to compose many existing web services. More and more, customers nowadays demand one stop service that takes care for multiple service composition. In this paper, we demonstrate how such a composition can be accomplished to form a coherent service flow for web service selection by an agent service by using BPEL. A workflow engine is provided to compose web services to implement different processes of data mining. WEKA a software tool is used to enable classification process of data mining and, graphic visualization software is used is used for visualization process of data mining. The data mining algorithms will be exported as web services. All these web services works basically on a QoS database of web services.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Susila, S</author></authors></contributors><titles><title>Web Service Selection based on QoS Attributes using Entropy Discretization Method</title></titles><periodical/><pages>47-53</pages><volume>30</volume><issue>2</issue><keywords><keyword>data normalization</keyword><keyword>entropy</keyword><keyword>qos</keyword><keyword>quality of service</keyword><keyword>web service relevancy function</keyword><keyword>web service selection</keyword><keyword>wsrf</keyword></keywords><dates><year>2011</year></dates><urls/><abstract>Using search engines (e.g. Google), service registries (UDDI), peer-to-peer networks, service portals, and various other sources, Web service interfaces can efficiently be searched. In order to find out relevant Web services, clients have to dedicate extreme amount of time to surf through available service resources and be capable to distinguish between services that share alike features. Discovering Web services all over diverse environments is becoming a difficult task and elevates a lot of anxieties such as performance, consistency, and sturdiness. This paper deals with ranking and selection of Web services on the basis of Entropy- Based Discretization with the help of using QoS constraints values provided by the client, and classifying them under corresponding service classifier. Using ranking (service classifier), client can easily choose the relevant Web service.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Tewari, Vandan</author></authors></contributors><titles><title>Classifying Web Services based on QoS Parameters using Extended Dataset</title></titles><periodical/><volume>74</volume><issue>8</issue><keywords/><dates><year>2013</year></dates><urls/><abstract>Web Services are the interoperable and loosely coupled components for simplifying business processes over the web and are popular model of distributed computing now a days. There are a very few datasets available regarding Quality of Service (QoS) for web services since web services datasets are difficult to create. The reason being that it requires more effort to collect service information from various sources and structure it into a dataset. QWS dataset [5] is a data set which contains quality of service parameters for Web Services. However, this dataset includes only nine quality of service parameters and misses on some very important non-functional attributes such as security, interoperability and robustness which may be important while discovering web services which are sensitive in nature. This constitutes the class of services used for defense applications related to national security and service related to heavy financial transactions. In this paper, a method of web service classification has been proposed based on QoS Parameters of web services. Additionally an extended QoS parameters data set has been created using statistical techniques and concept of Highly Normalized Function. This extended dataset consists of unlabeled samples, which are processed to generate labeled dataset. This synthetic dataset has been named as Non-functional Parameters Dataset (NfPD).</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Thakar, Urjita</author></authors></contributors><titles><title>A Methodology to Compose Web Services using Compatible Components based on QoS and Security Requirements of the Users</title></titles><periodical/><pages>30-37</pages><volume>46</volume><issue>10</issue><keywords><keyword>compatibility</keyword><keyword>composite web services</keyword></keywords><dates><year>2012</year></dates><urls/><abstract>Many online businesses offer services to the users that are complex in nature. A number of simple services need to be combined to form a composite service. User demands may include not only complex functional requirements but may also pertain to specific QoS and security needs. The overall QoS of the composite service and the offered security may be decided by the QoS and the security support given by each individual constituting component. In this paper, a methodology has been proposed to form complex service sets using component services with matching QoS values that shall also offer a minimal of security support satisfying user‟s requirement. Availability, response time and throughput are important QoS parameters. Taking into account, the user‟s requirements related to confidentiality, integrity and authentication, service sets are presented to the user in the form of a list such that the set with highest level of compatibility appears at the top. The proposed method thus is very useful for the user and enables him to avail the complex service that suit the best to his needs.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Thirumaran, M</author></authors></contributors><titles><title>Architecture for Evaluating Web Service QoS Parameters using Agents</title></titles><periodical/><pages>15-21</pages><volume>10</volume><issue>November</issue><keywords/><dates><year>2010</year></dates><urls/><abstract>As Web services have become the grand vision these days, more and more people are seeking out the practicalities of implementing and using them for business benefit. Thus Web services make application functionality available over the Internet in a standardized, programmatic way. QoS support for Web service has become a widely researched area and has shown to be an effective mechanism in Web services’ discovery particularly in differentiating between services that share similar functionalities and finally by evaluating QOS and providing interface for selecting the web service. In this paper, we are providing a sophisticated architecture for quality driven web service evaluation. Agents are used to evaluate the QWS parameters. This work also discussed about the quality attributes with organized set of design related questions which helps an evaluator to analyze the ability of the architecture to meet quality requirements, and provides a brief sample evaluation. ATAM method of software architecture evaluation is used to evaluate the proposed model. The assessment justifies the proposal in terms of the performance attributes such as reliability, availability, modifiability, security and interoperability etc.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Vivekanandan, K</author><author>Neelavathi, S</author><author>Subhashree, S</author><author>Kavitha, G</author><author>Kavitha, S</author></authors></contributors><titles><title>User-Rating Based QoS Aware Approach for Selection of Updated Web Services to Web Service Composition</title></titles><periodical/><pages>15-17</pages><volume>02</volume><issue>02</issue><keywords/><dates><year>2011</year></dates><urls/><abstract>The concept of dynamic composition of Web services has been given major importance in the recent years. While there are many systems available to select the services with the highest QoS score, very little thought has been given to the fact of constructing a model which takes in the user's rating of a service as a major input for selection. A robust system for fetching the most updated version of the selected services and selection of the services based on users' ratings of the QoS values rather than on the actual QoS values has been presented in our paper.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Yoo, John Jung-woon</author><author>Kumara, Soundar</author><author>Lee, Dongwon</author><author>R, General Motors</author></authors></contributors><titles><title>A Web Service Composition Framework Using Integer Programming with Non-Functional Objectives and Constraints Seog-Chan Oh</title></titles><periodical/><keywords/><urls><pdf-urls><url>internal-pdf://</url></pdf-urls></urls><abstract>In this paper, we propose a Web service composition framework that uses Integer Linear Programming with non-functional objectives and constraints, in addition to the syntactic matching of Web services features. We envision that when Web services are fully deployed and commercialized in the near future, the criteria of Web service composition to achieve objectives will vary depending on users' needs or preferences from the number of Web services to non-functional objectives, such as costs, time, and/or reputation. Such non-functional attributes cannot be readily considered in planning-graph, constraint satisfaction, or propositional satisfiability techniques, which are predominantly logic-based. This paper shows how the proposed Integer Linear Programming framework can be utilized to compose Web services with non-functional attributes. This framework enables our composition software agent to identify the best composition result that satisfies both non-functional requirements as well as functional ones, namely, parameter matching. A preliminary implementation of the proposed idea and further research directions are also discussed.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Yu, W. D.</author><author>Radhakrishna, R. B.</author><author>Pingali, S.</author><author>Kolluri, V.</author></authors></contributors><titles><title>Modeling the Measurements of QoS Requirements in Web Service Systems</title><secondary-title>Simulation</secondary-title></titles><periodical><full-title>Simulation</full-title></periodical><pages>75-91</pages><volume>83</volume><issue>1</issue><keywords><keyword>measurements</keyword><keyword>performance</keyword><keyword>quality of service</keyword><keyword>security</keyword><keyword>web services</keyword></keywords><dates><year>2007</year></dates><isbn>0037549707</isbn><electronic-resource-num>10.1177/0037549707079228</electronic-resource-num><urls><web-urls><url>http://sim.sagepub.com/cgi/doi/10.1177/0037549707079228</url></web-urls></urls><abstract>The new technology of Web services is beginning to impact the global business approaches and trends in which the services are being offered and consumed. The advancement of Web services and its wide spread use require that its quality of service (QoS) components to be highly dependable and robust. It is clear that one of the major inevitable challenges facing the business organizations today is to provide adequate QoS aspects for Web services. This paper gathers together the various techniques that can be used for measuring and optimizing the major QoS requirements for Web services proposed by the World Wide Consortium (W3C), while presenting a methodology to build QoS-aware Web services. A software model was designed and implemented to test a Web service and perform the experiments to quantitatively measure the QoS requirements involved in a Web service. Various modeling tests and experiments were designed and conducted to illustrate the proposed QoS measurement metrics. The techniques discussed in this paper can be incorporated into the planning, design, implementation, deployment, operational and maintenance phases during a Web service development lifecycle.</abstract></record><record><database name="Citeseer.enl" path="Citeseer.enl">Citeseer.enl</database><ref-type name="Journal Article">0</ref-type><contributors><authors><author>Zenuni, Xhemal</author><author>Momtchev, Ivan</author></authors></contributors><titles><title>Semantic Service Composition with QoS End – to – End Constraints via AND / OR Graphs</title></titles><periodical/><pages>35-40</pages><volume>9</volume><issue>2</issue><keywords><keyword>and</keyword><keyword>or graphs</keyword><keyword>qos</keyword><keyword>semantic service composition</keyword></keywords><dates><year>2012</year></dates><urls/><abstract>In this paper we present AND/OR graphs as a unifying framework for semantic service composition that considers users QoS constraints. The main virtues of this representation among others are its ability to express semantic inference and to deal with QoS constraints from different perspectives. In addition it correctly handles multiple inputs/outputs of services, and allows high degree of automation. Once service dependencies and QoS features are formalized as AND/OR graph, we apply a search algorithm to discover composite services that considers user QoS end – to – end preferences. The implementation of a prototype system and the experimental results support our underlying hypothesis that AND/OR graphs are not only elegant and expressive formalism for addressing QoS – aware semantic service composition, but efficient as well.</abstract></record></records></xml>
